apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: aws-registry-credential-cron
  namespace: default
spec:
  schedule: "* */4 * * *"
  successfulJobsHistoryLimit: 2
  failedJobsHistoryLimit: 2
  jobTemplate:
    spec:
      backoffLimit: 4
      template:
        spec:
          serviceAccountName: ecr-creds-agent
          terminationGracePeriodSeconds: 0
          restartPolicy: Never
          volumes:
          - name: creds
            secret:
              secretName: aws-ecr-secrets
          containers:
          - name: ecr-creds-job
            imagePullPolicy: IfNotPresent
            securityContext:
              runAsUser: 1001
            volumeMounts:
            - name: creds
              mountPath: "/home/aws/.aws"
              readOnly: true
            image: quay.io/justindav1s/k8s-tools:1.3
            command:
            - "/bin/sh"
            - "-c"
            - |
              set -x
              ls -ltr /home/aws/.aws
              aws --version
              AWS_ACCOUNT=$(cat /home/aws/.aws/account)
              AWS_REGION=$(cat /home/aws/.aws/config | grep region | cut -d'=' -f2)
              DOCKER_REGISTRY_SERVER=https://${AWS_ACCOUNT}.dkr.ecr.${AWS_REGION}.amazonaws.com
              DOCKER_USER=AWS
              DOCKER_PASSWORD=`aws ecr get-login --region ${AWS_REGION} --registry-ids ${AWS_ACCOUNT} | cut -d' ' -f6`
              TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)
              kubectl -n default delete secret aws-registry || true
              kubectl -n default create secret docker-registry aws-registry \
              --docker-server=$DOCKER_REGISTRY_SERVER \
              --docker-username=$DOCKER_USER \
              --docker-password=$DOCKER_PASSWORD \
              --docker-email=no@email.local
              kubectl -n default patch serviceaccount default -p '{"imagePullSecrets":[{"name":"aws-registry"}]}'