ansible_connection: local
ansible_python_interpreter: /usr/bin/python3

role:
  tag: eks

eks_cluster_name: demo-eks-cluster
kube_version: 1.19

eks_cluster_role_name: "{{ role.tag }}-cluster-role"
eks_worker_role_name:  "{{ role.tag }}-worker-role"

eks_kubeconfig: ~/.kube/eks.config
eks_kubeconfig_env: []

role_path: ~/github/ansible-aws/playbooks

vpc:
  name: "{{ role.tag }}-vpc"
  region: eu-west-2
  cidr: 10.10.0.0/16

subnets:
  "{{ role.tag }}-{{ vpc.region }}a":
    cidr: 10.10.1.0/24
    az: "{{ vpc.region }}a"
  "{{ role.tag }}-{{ vpc.region }}b":
    cidr: 10.10.2.0/24
    az: "{{ vpc.region }}b"
  "{{ role.tag }}-{{ vpc.region }}c":
    cidr: 10.10.3.0/24
    az: "{{ vpc.region }}c"

security_groups:
  - name: vpc-all
    description: "Allow internal traffic in the VPC"
    rules:
      - proto: all
        group_name: vpc-all
        from_port: 0
        to_port: 65000
      - proto: tcp
        cidr_ip: "0.0.0.0/0"
        ports:
          - 22
      - proto: tcp
        cidr_ip: "0.0.0.0/0"
        ports:
          - 80
          - 443

  - name: allow-public-ssh
    description: "Allow public SSH"
    rules:
      - proto: tcp
        cidr_ip: 0.0.0.0/0
        ports:
          - 22

  - name: allow-public-http
    description: "Allow public web traffic"
    rules:
      - proto: tcp
        cidr_ip: 0.0.0.0/0
        ports:
          - 80
          - 443

workers:
  stack_name: eks-worker-nodes1
  cluster_name: "{{ eks_cluster_name }}"
  node_group_name: "{{ eks_cluster_name }}-node-grp1"
  bootstrap_args: ""
  key_name: jnd_mac_rh
  node_ami: ami-0d1872e4dda33c569
  instance_type: t3.medium
  auto_scaling_count: 1
  auto_scaling_min: 1
  auto_scaling_max: 3
  ebs_vol_gb: 20
  control_plane_sg: "{{ security_groups[0].name }}"

# 1.11 20/02/19 ami-098fb7e9b507904e7
# 1.11 11/02/19 ami-0b469c0fef0445d29


